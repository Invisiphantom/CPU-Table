$date
	Tue Dec  5 22:52:18 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module arch_tb $end
$var reg 1 ! clk $end
$scope module arch_inst $end
$var wire 1 ! clk $end
$var wire 1 " pCnd $end
$var wire 4 # pIcode [3:0] $end
$var wire 64 $ pValC [63:0] $end
$var wire 64 % pValM [63:0] $end
$var wire 64 & pValP [63:0] $end
$var wire 64 ' valP [63:0] $end
$var wire 64 ( valM [63:0] $end
$var wire 64 ) valE [63:0] $end
$var wire 64 * valC [63:0] $end
$var wire 64 + valB [63:0] $end
$var wire 64 , valA [63:0] $end
$var wire 4 - rB [3:0] $end
$var wire 4 . rA [3:0] $end
$var wire 1 / memWrite $end
$var wire 1 0 memRead $end
$var wire 64 1 memData [63:0] $end
$var wire 64 2 memAddr [63:0] $end
$var wire 4 3 ifun [3:0] $end
$var wire 4 4 icode [3:0] $end
$var wire 2 5 aluFun [1:0] $end
$var wire 64 6 aluB [63:0] $end
$var wire 64 7 aluA [63:0] $end
$var wire 1 8 ZF $end
$var wire 1 9 SF $end
$var wire 64 : PCaddress [63:0] $end
$var wire 1 ; OF $end
$var wire 1 < Cnd $end
$scope module u_ALU $end
$var wire 2 = aluFun [1:0] $end
$var wire 64 > aluB [63:0] $end
$var wire 64 ? aluA [63:0] $end
$var wire 1 8 ZF $end
$var wire 1 9 SF $end
$var wire 1 ; OF $end
$var reg 64 @ valE [63:0] $end
$upscope $end
$scope module u_ALU_A $end
$var wire 64 A valC [63:0] $end
$var wire 64 B valA [63:0] $end
$var wire 4 C icode [3:0] $end
$var reg 64 D aluA [63:0] $end
$upscope $end
$scope module u_ALU_B $end
$var wire 64 E valB [63:0] $end
$var wire 4 F icode [3:0] $end
$var reg 64 G aluB [63:0] $end
$upscope $end
$scope module u_ALU_fun $end
$var wire 4 H ifun [3:0] $end
$var wire 4 I icode [3:0] $end
$var reg 2 J aluFun [1:0] $end
$upscope $end
$scope module u_CC $end
$var wire 1 ; OF $end
$var wire 1 9 SF $end
$var wire 1 8 ZF $end
$var wire 4 K ifun [3:0] $end
$var reg 1 < Cnd $end
$upscope $end
$scope module u_InstMemory $end
$var wire 64 L valC [63:0] $end
$var wire 80 M instruction [79:0] $end
$var wire 64 N PCaddress [63:0] $end
$var reg 4 O icode [3:0] $end
$var reg 4 P ifun [3:0] $end
$var reg 4 Q rA [3:0] $end
$var reg 4 R rB [3:0] $end
$var reg 64 S valC_litend [63:0] $end
$upscope $end
$scope module u_Mem $end
$var wire 1 / memWrite $end
$var wire 1 0 memRead $end
$var wire 64 T memData [63:0] $end
$var wire 64 U memAddr [63:0] $end
$var reg 64 V valM [63:0] $end
$upscope $end
$scope module u_MemAddr $end
$var wire 4 W icode [3:0] $end
$var wire 64 X valE [63:0] $end
$var wire 64 Y valA [63:0] $end
$var reg 64 Z memAddr [63:0] $end
$upscope $end
$scope module u_MemControl $end
$var wire 4 [ icode [3:0] $end
$var wire 1 / memWrite $end
$var wire 1 0 memRead $end
$upscope $end
$scope module u_MemData $end
$var wire 4 \ icode [3:0] $end
$var wire 64 ] valP [63:0] $end
$var wire 64 ^ valA [63:0] $end
$var reg 64 _ memData [63:0] $end
$upscope $end
$scope module u_PC $end
$var wire 1 ! clk $end
$var wire 1 " pCnd $end
$var wire 4 ` pIcode [3:0] $end
$var wire 64 a pValC [63:0] $end
$var wire 64 b pValM [63:0] $end
$var wire 64 c pValP [63:0] $end
$var reg 64 d PCaddress [63:0] $end
$upscope $end
$scope module u_PCIncre $end
$var wire 64 e PCaddress [63:0] $end
$var wire 4 f icode [3:0] $end
$var reg 64 g valP [63:0] $end
$upscope $end
$scope module u_Regs $end
$var wire 1 < Cnd $end
$var wire 1 ! clk $end
$var wire 4 h icode [3:0] $end
$var wire 64 i r10 [63:0] $end
$var wire 64 j r11 [63:0] $end
$var wire 64 k r12 [63:0] $end
$var wire 64 l r13 [63:0] $end
$var wire 64 m r14 [63:0] $end
$var wire 64 n r8 [63:0] $end
$var wire 64 o r9 [63:0] $end
$var wire 4 p rA [3:0] $end
$var wire 4 q rB [3:0] $end
$var wire 64 r rax [63:0] $end
$var wire 64 s rbp [63:0] $end
$var wire 64 t rbx [63:0] $end
$var wire 64 u rcx [63:0] $end
$var wire 64 v rdi [63:0] $end
$var wire 64 w rdx [63:0] $end
$var wire 64 x rsi [63:0] $end
$var wire 64 y rsp [63:0] $end
$var wire 64 z valE [63:0] $end
$var wire 64 { valM [63:0] $end
$var reg 64 | valA [63:0] $end
$var reg 64 } valB [63:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx }
bx |
bx {
b1 z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
b110 q
b1111 p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
b11 h
b1010 g
b11 f
b0 e
b0 d
b1010 c
bz b
b1 a
b11 `
bx _
bx ^
b1010 ]
b11 \
b11 [
bx Z
bx Y
b1 X
b11 W
bx V
bx U
bx T
b100000000000000000000000000000000000000000000000000000000 S
b110 R
b1111 Q
b0 P
b11 O
b0 N
b110000111101100000000100000000000000000000000000000000000000000000000000000000 M
b1 L
b0 K
b0 J
b11 I
b0 H
b0 G
b11 F
bx E
b1 D
b11 C
bx B
b1 A
b1 @
b1 ?
b0 >
b0 =
1<
0;
b0 :
09
08
b1 7
b0 6
b0 5
b11 4
b0 3
bx 2
bx 1
00
0/
b1111 .
b110 -
bx ,
bx +
b1 *
b1 )
bx (
b1010 '
b1010 &
bz %
b1 $
b11 #
1"
0!
$end
#5
b1 x
b10 )
b10 @
b10 X
b10 z
b10 7
b10 ?
b10 D
b10 $
b10 a
b10 *
b10 A
b10 L
b1000000000000000000000000000000000000000000000000000000000 S
b111 -
b111 R
b111 q
b10100 &
b10100 c
b10100 '
b10100 ]
b10100 g
b110000111101110000001000000000000000000000000000000000000000000000000000000000 M
b1010 :
b1010 N
b1010 d
b1010 e
1!
#10
0!
#15
b10 v
b100 )
b100 @
b100 X
b100 z
b100 7
b100 ?
b100 D
b100 $
b100 a
b100 *
b100 A
b100 L
b10000000000000000000000000000000000000000000000000000000000 S
b101 -
b101 R
b101 q
b11110 &
b11110 c
b11110 '
b11110 ]
b11110 g
b110000111101010000010000000000000000000000000000000000000000000000000000000000 M
b10100 :
b10100 N
b10100 d
b10100 e
1!
#20
0!
#25
b100 s
19
b1111111111111111111111111111111111111111111111111111111111100000 )
b1111111111111111111111111111111111111111111111111111111111100000 @
b1111111111111111111111111111111111111111111111111111111111100000 X
b1111111111111111111111111111111111111111111111111111111111100000 z
b1111111111111111111111111111111111111111111111111111111111100000 7
b1111111111111111111111111111111111111111111111111111111111100000 ?
b1111111111111111111111111111111111111111111111111111111111100000 D
b1111111111111111111111111111111111111111111111111111111111100000 $
b1111111111111111111111111111111111111111111111111111111111100000 a
b1111111111111111111111111111111111111111111111111111111111100000 *
b1111111111111111111111111111111111111111111111111111111111100000 A
b1111111111111111111111111111111111111111111111111111111111100000 L
b1110000011111111111111111111111111111111111111111111111111111111 S
b0 -
b0 R
b0 q
b101000 &
b101000 c
b101000 '
b101000 ]
b101000 g
b110000111100001110000011111111111111111111111111111111111111111111111111111111 M
b11110 :
b11110 N
b11110 d
b11110 e
1!
#30
0!
#35
b1111111111111111111111111111111111111111111111111111111111100000 r
09
b1000000 )
b1000000 @
b1000000 X
b1000000 z
b1000000 7
b1000000 ?
b1000000 D
b1000000 $
b1000000 a
b1000000 *
b1000000 A
b1000000 L
b100000000000000000000000000000000000000000000000000000000000000 S
b10 -
b10 R
b10 q
b110010 &
b110010 c
b110010 '
b110010 ]
b110010 g
b110000111100100100000000000000000000000000000000000000000000000000000000000000 M
b101000 :
b101000 N
b101000 d
b101000 e
1!
#40
0!
#45
b1000000 ,
b1000000 B
b1000000 Y
b1000000 ^
b1000000 |
b1111111111111111111111111111111111111111111111111111111111100000 +
b1111111111111111111111111111111111111111111111111111111111100000 E
b1111111111111111111111111111111111111111111111111111111111100000 }
b1000000 w
0;
19
08
b1111111111111111111111111111111111111111111111111111111110100000 )
b1111111111111111111111111111111111111111111111111111111110100000 @
b1111111111111111111111111111111111111111111111111111111110100000 X
b1111111111111111111111111111111111111111111111111111111110100000 z
b0 $
b0 a
b0 *
b0 A
b0 L
1"
1<
b1000000 7
b1000000 ?
b1000000 D
b1111111111111111111111111111111111111111111111111111111111100000 6
b1111111111111111111111111111111111111111111111111111111111100000 >
b1111111111111111111111111111111111111111111111111111111111100000 G
b1 5
b1 =
b1 J
b0 S
b0 -
b0 R
b0 q
b10 .
b10 Q
b10 p
b1 3
b1 H
b1 K
b1 P
b110 #
b110 `
b110 4
b110 C
b110 F
b110 I
b110 O
b110 W
b110 [
b110 \
b110 f
b110 h
b110100 &
b110100 c
b110100 '
b110100 ]
b110100 g
b1100001001000000111001100111111000000000000000000000000000000000000000000000000 M
b110010 :
b110010 N
b110010 d
b110010 e
1!
#50
0!
#55
bx +
bx E
bx }
bx ,
bx B
bx Y
bx ^
bx |
b1111111111111111111111111111111111111111111111111111111110100000 r
b111111 $
b111111 a
b111111 *
b111111 A
b111111 L
0"
0<
b11111100000000000000000000000000000000000000000000000000000000 S
b1111 -
b1111 R
b1111 q
b11 .
b11 Q
b11 p
b11 3
b11 H
b11 K
b11 P
b111 #
b111 `
b111 4
b111 C
b111 F
b111 I
b111 O
b111 W
b111 [
b111 \
b111 f
b111 h
b111101 &
b111101 c
b111101 '
b111101 ]
b111101 g
b1110011001111110000000000000000000000000000000000000000000000000000000000010000 M
b110100 :
b110100 N
b110100 d
b110100 e
1!
#60
0!
#65
b0 $
b0 a
b0 *
b0 A
b0 L
1"
1<
b0 S
b0 -
b0 R
b0 q
b0 .
b0 Q
b0 p
b0 3
b0 H
b0 K
b0 P
b1 #
b1 `
b1 4
b1 C
b1 F
b1 I
b1 O
b1 W
b1 [
b1 \
b1 f
b1 h
b111110 &
b111110 c
b111110 '
b111110 ]
b111110 g
b10000000000000110000001100010000100000001000000010000000000000000000000000000 M
b111101 :
b111101 N
b111101 d
b111101 e
1!
#70
0!
#75
b110 .
b110 Q
b110 p
b0 #
b0 `
b0 4
b0 C
b0 F
b0 I
b0 O
b0 W
b0 [
b0 \
b0 f
b0 h
b111110 &
b111110 c
b111110 '
b111110 ]
b111110 g
b11000000110001000010000000100000001000000000000000000000000000000000000 M
b111110 :
b111110 N
b111110 d
b111110 e
1!
#80
0!
#85
1!
#90
0!
#95
1!
#100
0!
#105
1!
#110
0!
#115
1!
#120
0!
#125
1!
#130
0!
#135
1!
#140
0!
#145
1!
#150
0!
#155
1!
#160
0!
#165
1!
#170
0!
#175
1!
#180
0!
#185
1!
#190
0!
#195
1!
#200
0!
#205
1!
#210
0!
#215
1!
#220
0!
#225
1!
#230
0!
#235
1!
#240
0!
#245
1!
#250
